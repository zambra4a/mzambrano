/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var import0 = require("../../src/scrollTo");
var import1 = require("@angular/core/src/change_detection/change_detection_util");
var import3 = require("@angular/core/src/linker/view_utils");
var Wrapper_ScrollTo = (function () {
    function Wrapper_ScrollTo(p0) {
        this._changed = false;
        this.context = new import0.ScrollTo(p0);
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
        this._expr_2 = import1.UNINITIALIZED;
    }
    Wrapper_ScrollTo.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_ScrollTo.prototype.ngOnDestroy = function () {
    };
    Wrapper_ScrollTo.prototype.check_scrollableElementSelector = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.scrollableElementSelector = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_ScrollTo.prototype.check_scrollTargetSelector = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_1, currValue))) {
            this._changed = true;
            this.context.scrollTargetSelector = currValue;
            this._expr_1 = currValue;
        }
    };
    Wrapper_ScrollTo.prototype.check_scrollYTarget = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_2, currValue))) {
            this._changed = true;
            this.context.scrollYTarget = currValue;
            this._expr_2 = currValue;
        }
    };
    Wrapper_ScrollTo.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_ScrollTo.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_ScrollTo.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.context.onClick($event) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    Wrapper_ScrollTo.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_ScrollTo;
}());
exports.Wrapper_ScrollTo = Wrapper_ScrollTo;
//# sourceMappingURL=scrollTo.ngfactory.js.map